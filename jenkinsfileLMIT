#!/usr/bin/env groovy
@Library(['piper-lib', 'piper-lib-os','lmit-jenkins-lib']) _


node ('windowskymanode') 
{
	parameters{
        string(name: 'credentialsId', defaultValue: 'pusercf2',
            description: 'The user with which we can access BTP Landscape and CF')
      
        string(name: 'Subscriber1Subdomain', defaultValue: 'cityscooter-bzxa8vyuws',
            description: 'BTP subdomain name of the subaccount')

        string(name: 'btpGlobalAccountId', defaultValue: '2a979d83-c576-4ff8-a281-8bb45bc5480d',
            description: 'BTP Global AccountId')
        
        string(name: 'btpSubdomainName', defaultValue: 'kymacrossconsumption-e530d087',
            description: 'BTP subdomain name of the provider subaccount')
 
		string(name: 'saasApplicationName', defaultValue: 'easyfranchise-kymacrossconsumption-e530d087',
            description: 'BTP saasApplicationName')
        
        string(name: 'btpRegion', defaultValue: 'eu10-canary',
            description: 'BTP region of the subaccount')
    
        string(name: 'btpLandscape', defaultValue: 'canary',
            description: ' btp Landscape')

		string(name: 'LandscapeURL', defaultValue: 'https://canary.cockpit.btp.int.sap/cockpit#/globalaccount/2a979d83-c576-4ff8-a281-8bb45bc5480',
            description: ' Landscape URL')

		string(name: 'Subaccount', defaultValue: 'CityScooter',
            description: ' Provider Subaccount')
     
        
    } 

dockerExecuteOnKubernetes(script: this, dockerEnvVars: ['pusername':pusername, 'puserpwd':puserpwd], dockerImage: 'docker.wdf.sap.corp:51010/sfext:v3-py' )
{
	try {

		stage ('Git-clone') 
			{
				deleteDir()
                checkout scm
				withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId:'GithubTools',usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]){
				sh'''
				git clone https://github.com/VanitaDhanagar/kyma-multitenant-extension.git --branch 'main'
				mv ./kyma-multitenant-extension/* ./
                git clone https://github.com/SAP-samples/btp-kyma-multitenant-extension.git --branch 'main'
				mv ./btp-kyma-multitenant-extension/* ./
				'''
				echo ${params.LandscapeURL}
				echo ${params.subaccount}

				}

			}
			stage ('check_Subaccount_exist') 
			{
				// withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId:params.credentialsId,usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]){
           
				//     checkSubaccount(
				// 			btpCredentialsId: params.credentialsId,
				// 			btpGlobalAccountId: params.btpGlobalAccountId,
				// 			btpSubdomainName: params.btpSubdomainName,
				// 			btpLandscape: params.btpLandscape,
				// 			btpRegion: params.btpRegion,
				// 			command: 'list accounts/subaccount'
				// 	)

				// }
				  
			}
			stage('Application deployment')
	{
// 		node ('windowskymanode') 
//        {	
// 		deleteDir()

//               withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId:'GithubTools',usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']])
//               {
// 		withKubeConfig([credentialsId: 'kubeconfiglmit']) 
// {
             
//                        sh '''
// 						 git clone https://github.com/VanitaDhanagar/kyma-multitenant-extension.git --branch 'main'
// 				         mv ./kyma-multitenant-extension/* ./
// 						 git clone https://github.com/SAP-samples/btp-kyma-multitenant-extension.git --branch 'main'
// 				         mv ./btp-kyma-multitenant-extension/* ./
// 						 choco install jq					  
//                         kubectl config view 	
//                         ./btpsa-deployment.sh
//                         '''   
// 						 sleep 200;
              
//           }
           
// 	   }
// 	   }
		 }
		stage('Subscribe Application')
		{
		// 	   withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId:params.credentialsId,usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]){
				
        //           subscribeToSaaS(
		// 		   btpCredentialsId: params.credentialsId,
		// 		   btpGlobalAccountId: params.btpGlobalAccountId, 
		// 		   btpSubdomainName: params.Subscriber1Subdomain, 
		// 		   btpRegion: params.btpRegion, 
		// 		   btpLandscape: params.btpLandscape, 
		// 		   saasApplicationName: params.saasApplicationName, 
		// 		   saasSubscribtionPlan: 'default',
		// 		   saasDefaultPlanRequired: true, 
		// 		   pollWaitSeconds: 10 )
                


		// }
		}
 node ('master') 
{
	 stage('UI Test')
	 {
		dockerExecuteOnKubernetes(script: this, dockerEnvVars: ['pusername':pusername, 'puserpwd':puserpwd], dockerImage: 'engsrvval.int.repositories.cloud.sap/testrunner:latest' )
		 {
	     
		   withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId:params.credentialsId, usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']])
		    {
			//build job: 'risk-manage-cls-Runtime'
		      sh '''
			  if [ -d "CloudPortal" ]
			  then
			    rm -rf CloudPortal
			  fi 
			git clone --single-branch --branch "us10" "https://11a1e1192fe5096b335b2b4c1201d43cb35bd93d@github.tools.sap/BTP-E2EScenarioValidation/CloudPortal.git"  
		       '''
		      sh" cd ${WORKSPACE}/CloudPortal && mvn clean test -Dtestng.File=${WORKSPACE}/CloudPortal/XMLFilesRefApp/testng_kyma_multitenant.xml  -DonboardingScenarioPortalURL=${params.LandscapeURL} -Dorg.freemarker.loggerLibrary=none -DonboardingScenarioPortalusername=$USERNAME -DonboardingScenarioPortalPass=$PASSWORD -DsubAccountName=${params.Subaccount}" 

		
		}
	   }
	}
}
		// stage('UI_Test_Execution')
		// {
		// 	withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId:params.credentialsId,usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]){		
			
		// 		username = env.username
		// 		print username
		// 		password = env.password
		// 		print password
		// 		// build job: 'Kyma_Multitenant_LMIT_UI_Canary_Mock', parameters: [[$class: 'StringParameterValue', name: 'URL', value: 'https://canary.cockpit.btp.int.sap/cockpit#/globalaccount/2a979d83-c576-4ff8-a281-8bb45bc5480'],[$class: 'StringParameterValue', name: 'Username', value: username],[$class: 'StringParameterValue', name: 'Password', value: password],[$class: 'StringParameterValue', name: 'Subaccount', value: 'CityScooter']]

		// }
		// }
		stage('Unsubscribe Application')
		{	

        //   withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId:params.credentialsId,usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]){
				
        //           unsubscribeFromSaaS(
        //             script: this,
        //             btpCredentialsId: params.credentialsId,
        //             btpGlobalAccountId: params.btpGlobalAccountId,
        //             saasApplicationName: params.saasApplicationName,
		// 			btpLandscape: params.btpLandscape,
        //             btpRegion: params.btpRegion,
        //             saasSubscribtionPlan: 'default',
        //             btpSubdomainName: params.Subscriber1Subdomain,
		// 			saasDefaultPlanRequired: true, 
		// 		   pollWaitSeconds: 10 
        //           )
                


		// }
		}
				stage('Undeploy Apps')
	{
//         node ('windowskymanode') 
// {
//     deleteDir()

//               withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId:'GithubTools',usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']])
//               {

//          withKubeConfig([credentialsId: 'kubeconfiglmit']) 
// {
			
//                         sh '''
//                         git clone https://github.com/VanitaDhanagar/kyma-multitenant-extension.git --branch 'main'
// 				mv ./kyma-multitenant-extension/* ./
// 				git clone https://github.com/SAP-samples/btp-kyma-multitenant-extension.git --branch 'main'
// 				mv ./btp-kyma-multitenant-extension/* ./
//                           kubectl version
// 						   sleep 1m
//                           kubectl config view
//                           pwd
// 						  chmod +x ./kyma-un-deployment.sh
// 						  ./kyma-un-deployment.sh

//                         '''   
              
          
// }
// }  
// }
          
		 }	
		}
				 
	catch(e){
		echo e.toString()
		echo 'This will run only if failed'
		currentBuild.result = "FAILURE"
	}
	finally {
		emailext body: '$DEFAULT_CONTENT', subject: '$DEFAULT_SUBJECT', to: 'vanita.dhanagar@sap.com'
	}
}
} 


